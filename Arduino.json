{
"platform":{
    "Arduino": {
        "components": {
                "Button" : {
                    "description" : "Hardware Abstraction for Buttons. It provides an easy way of handling buttons.",
                    "img": "",
                    "signals": {
                        "isPressed" : {
                            "img" : "",
                            "description" : "Return true if the button has been pressed"
                        },
                        "clicked": {
                            "img" : "",
                            "description" : "Return > 0 if the button is clicked, or 0 if not."
                        }
                    },
                    "parameters": {
                        "pin" : {
                            "img" : "",
                            "type": "uint8_t",
                            "description" : "sets the pin that this switch is connected to"
                        },
                        "buttonMode" : {
                            "img" : "",
                            "type": "uint8_t",
                            "description" : "buttonMode indicates BUTTON_PULLUP or BUTTON_PULLDOWN resistor"
                        }
                    },
                    "variables" : {},
                    "methods" : {},
                    "singletone" : "False"

                },

                "LED" : {
                    "description" : "Hardware Abstraction for LEDs. It provides an easy way of handling LEDs.",
                    "img": "",
                    "signals": {},
                    "parameters": {
                        "pin" : {
                            "img" : "",
                            "type": "uint8_t",
                            "description" : "pin - the pin connected to this LED"
                        }
                    },
                    "variables" : {},
                    "methods" : {
                        "on": {
                            "img" : "",
                            "parameters": {},
                            "description" : "Set this LED on"
                        },
                        "off": {
                            "img": "",
                            "parameters": {},
                            "description" : "Set this LED off"
                        },
                        "toggle": {
                            "img": "",
                            "parameters": {},
                            "description": "It will change state from on to off, or off to on"
                        },
                        "blink": {
                            "img": "",
                            "parameters": {
                                "time": {
                                    "img": "",
                                    "type": "unsigned int",
                                    "description": "the time each blink will take"
                                },
                                "times": {
                                    "img": "",
                                    "type": "byte",
                                    "description": "times the number of blinks"
                                }
                            },
                            "description": "Bling this led a number of times, with the duration of time each blink"
                        },
                        "setValue": {
                            "img": "",
                            "parameters": {
                                "val": {
                                    "img": "",
                                    "type":"byte",
                                    "description": "val the value to set the LED to [0,255]"
                                }
                            },
                            "description": "analogWrites the pin if PWM, else it either turn it on or off"
                        }
                        }
                    },
                    "singletone" : "False"

                },
                "Timer": {
                    "description": "Программный таймер.",
                    "img": "",
                    "signals": {
                        "timeout": {
                            "img": "",
                            "description": "Время вышло!"
                        }
                    },
                    "parameters": {},
                    "methods": {
                        "reset": {
                            "img": "",
                            "parameters": {},
                            "description": "Сбросить таймер, отчет начнется сначала"
                        },
                        "disable": {
                            "img": "",
                            "parameters": {},
                            "description": "Отключить таймер."
                        },
                        "enable": {
                            "img": "",
                            "parameters": {},
                            "description": "Включить таймер."
                        },
                        "start": {
                            "img": "",
                            "parameters": {
                                "img": "",
                                "interval": "unsigned long",
                                "description": "Запустить таймер. Будет  сигнал раз в интервал."
                            }
                        }
                    },
                    "singletone": "False",
                    "variables": {
                        "difference": {
                            "img": "",
                            "type": "unsigned long",
                            "description": "Оставшееся время до окончания таймера."
                        }
                    }
                },
                "Counter": {
                    "description": "Переменная-счетчик.",
                    "img": "",
                    "signals": {
                        "isEqual": {
                            "img": "",
                            "description": "Издать сигнал, если значение счетчика равно value",
                            "parameters": {
                                "value": "int"
                            }
                        },
                        "isLess": {
                            "img": "",
                            "description": "Издать сигнал, если значение счетчика меньше value",
                            "parameters": {
                                "value": "int"
                            }
                        },
                        "isGreater": {
                            "img": "",
                            "description": "Издать сигнал, если значение счетчика больше value",
                            "parameters": {
                                "value": "int"
                            }
                        }
                    },
                    "parameters": {},
                    "methods": {
                        "add": {
                            "img": "",
                            "description": "Добавить value к значению счетчика",
                            "parameters": {
                                "value": "int"
                            }
                        },
                        "sub": {
                            "img": "",
                            "description": "Вычесть value к значению счетчика",
                            "parameters": {
                                "value": "int"
                            }
                        },
                        "reset": {
                            "img": "",
                            "description": "Обнулить значение счетчика.",
                            "parameters": {}
                        }
                    },
                    "variables": {
                        "value": {
                            "img": "",
                            "description": "Текущее значение счетчика",
                            "type": "int"
                        }
                    },

                    "singletone": "False"                    
            },
            "QHsmSerial": {
                "description": "Класс-надстройка над Serial. Вызывает сигналы при получении данных.",
                "img": "",
                "signals": {
                    "SERIAL_NO_DATA_RECEIVED": {
                        "img": "",
                        "description": "Был вызван read, но данные не были получены"
                    },
                    "SERIAL_RECEIVED_BYTE": {
                        "img": "",
                        "description": "Были получены данные"
                    }
                },
                "parameters": {
                    "baud": {
                        "img": "",
                        "description": "Установить частоту работы Serial",
                        "type": "unsigned long"
                    }
                },
                "methods": {
                    "println": {
                        "img": "",
                        "description": "Вывести данные в Serial монитор с добавлением \\n в конце",
                        "parameters": {
                            "value": {
                                "img": "",
                                "description": "Данные для вывода",
                                "type": "int | char[]"
                            }
                        }
                    },
                    "print": {
                        "img": "",
                        "description": "Вывести данные в Serial монитор с добавлением.",
                        "parameters": {
                            "value": {
                                "img": "",
                                "description": "Данные для вывода",
                                "type": "int | char[]"
                            }
                        }
                    },
                    "read": {
                        "img": "",
                        "description": "Прочитать данные из Serial.",
                        "parameters": {}
                    }
                },
                "variables": {
                    "lastByte": {
                        "description": "Последний прочитанный байт.",
                        "type": "int"                    
                    }
                },
                "singletone": "True"
            },
            "PWM": {
                "description": "Класс, реализующий ШИМ",
                "img": "",
                "signals": {},
                "parameters": {
                    "pin": {
                        "img": "",
                        "type": "uint8_t",
                        "description": "Пин, на котором будет установлен ШИМ"
                    }
                },
                "methods": {
                    "write": {
                        "img": "",
                        "parameters": {
                            "value": {
                                "img": "",
                                "type": "int",
                                "description": "Значение, которое будет установлено на ШИМ."
                            }
                        },
                        "description": "Установить значение на ШИМ"
                    }
                },
                "variables": {},
                "singletone": "False"
            },

            "DigitalOut": {
                "description": "Класс для подачи LOW, HIGH на пин",
                "img": "",
                "signals": {},
                "parameters": {
                    "pin": {
                        "img": "",
                        "type": "uint8_t",
                        "description": "Пин, на который будет подаваться сигнал."
                    }
                },
                "methods": {
                    "low": {
                        "img": "",
                        "parameters": {},
                        "description": "Подать LOW на пин."
                    },
                    "high": {
                        "img": "",
                        "parameters": {},
                        "description": "Подать HIGH на пин."
                    }
                },
                "variables": {},
                "singletone": "False"
            },

            "DigitalIn": {
                "description": "Класс для считывания сигнала с пина",
                "img": "",
                "signals": {
                    "isChanged": {
                        "img": "",
                        "description": "Сигнал вызывается, когда меняется значение на пине."
                    }
                },

                "methods": {},
                "variables": {
                    "value": {
                        "img": "",
                        "type": "int",
                        "description": "Текущее значение на пине."
                    }
                },
                "singletone": "False"
            },

            "AnalogOut": {
                "description": "Класс для установки значения на аналоговые пины",
                "img": "",
                "signals": {},
                "methods": {
                    "write": {
                        "img": "",
                        "parameters": {
                            "value": {
                                "img": "",
                                "type": "int",
                                "description": "Значение, которое будет установлено на аналоговые пин."
                            }
                        },
                        "description": "Установить значения на аналоговый пин"
                    }
                },
                "variables": {},
                "singletone": "False"
            }
        }
    }
}